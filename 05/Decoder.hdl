CHIP Decoder {
  IN instruction[16];
  OUT c, loadMfromA, zx, nx, zy, ny, func, no, destA, destD, destM, JLT, JEQ, JGT;

  PARTS:
  Not(in=instruction[15], out=a);
  Not(in=a, out=c);
  And(a=instruction[15], b=instruction[12], out=loadMfromA);
  And(a=instruction[15], b=instruction[11], out=zx);
  And(a=instruction[15], b=instruction[10], out=nx);
  And(a=instruction[15], b=instruction[9], out=zy);
  And(a=instruction[15], b=instruction[8], out=ny);
  And(a=instruction[15], b=instruction[7], out=func);
  And(a=instruction[15], b=instruction[6], out=no);
  And(a=instruction[15], b=instruction[5], out=destA);
  And(a=instruction[15], b=instruction[4], out=destD);
  And(a=instruction[15], b=instruction[3], out=destM);
  And(a=instruction[15], b=instruction[2], out=JLT);
  And(a=instruction[15], b=instruction[1], out=JEQ);
  And(a=instruction[15], b=instruction[0], out=JGT);
}